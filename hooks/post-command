#!/bin/bash
set -euo pipefail

BUILDKITE_JOB_ID="${BUILDKITE_JOB_ID:-}"

function plugin_read_list() {
  prefix_read_list "BUILDKITE_PLUGIN_DOCKER_SIZE_ANNOTATION_$1"
}

function prefix_read_list() {
  local prefix="$1"
  local parameter="${prefix}_0"

  if [[ -n "${!parameter:-}" ]]; then
    local i=0
    local parameter="${prefix}_${i}"
    while [[ -n "${!parameter:-}" ]]; do
      echo "${!parameter}"
      i=$((i+1))
      parameter="${prefix}_${i}"
    done
  elif [[ -n "${!prefix:-}" ]]; then
    echo "${!prefix}"
  fi
}

function compose_tag_for_service() {
  local service="$1"

  echo "buildkite${BUILDKITE_JOB_ID//-}-${service}"
}

function compose_image_for_service() {
  local service="$1"
  local image=""

  image=$(docker compose config \
    | grep -E "^(  [._[:alnum:]-]+:|    image:)" \
    | grep -E "(  ${service}:)" -A 1 \
    | grep -oE '  image: (.+)' \
    | awk '{print $2}')

  echo "$image"
}


services=()

if [[ -n "$(plugin_read_list ANNOTATE)" ]]; then
  for service_name in $(plugin_read_list ANNOTATE); do
    services+=("$service_name")
  done
fi

for service_name in "${services[@]}"; do
  context="image-size-${service_name}"

  tags=("$(compose_tag_for_service "$service_name")" "$(compose_image_for_service "$service_name")")

  for tag in "${tags[@]}" ; do
    echo "Checking for tag: ${tag}"
    message=$(docker images --format "**${BUILDKITE_LABEL}** - *${service_name}* docker image is **{{.Size}}** (Tag {{.Tag}} ID {{.ID}})" "$tag")
    if [ -n "$message" ]; then
      echo "${message:-Unknown}" | buildkite-agent annotate --style info --context "${context}"
      break;
    fi
  done
done
